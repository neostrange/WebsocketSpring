package com.tiss.tip.service;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.tiss.tip.dal.ESQueryCreator;
import com.tiss.tip.dal.MalwareIncidentRepository;
import com.tiss.tip.model.Incident;
import com.tiss.tip.model.MalwareIncident;

@Service
public class MalwareIncidentService {

	@Autowired
	private MalwareIncidentRepository repository;

	@Autowired
	private ESQueryCreator queryService;

	public List<MalwareIncident> getByUrl(String url) {
		return repository.findByUrl(url);
	}

	public String getBySrcIP(String ip) {
		String s = null;
		try {
			s = new ObjectMapper().writeValueAsString(repository.findBySrcIP(ip));
		} catch (JsonProcessingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return s;
	}

	public MalwareIncident getById(String _id) {
		return repository.findOne(_id);
	}

	public List<Incident> getByDstIP(String ip) {
		return repository.findByDstIP(ip);

	}

	public List<JsonNode> getSrcCountryIP(String type, String from, String to, int size) {
		return queryService.getTopIPCountries(type, to, from, size);
	}

	public List<JsonNode> getMalwareHashes(String malware, String from, String to, int size) {
		return queryService.getMalwareHashes(malware, from, to, size, null);
	}
	
	public List<JsonNode> getMalwareHashes(String malware, String from, String to, int size, String country) {
		return queryService.getMalwareHashes(malware, from, to, size, country);
	}

	public List<JsonNode> getTopMalwares(String from, String to, int size) {
		return queryService.getTopMalwares(from, to, size);
	}

}